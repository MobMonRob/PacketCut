<?xml version="1.0" ?>
<cherrytree>
	<node custom_icon_id="0" foreground="" is_bold="False" name="SensorPlot" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1556177514.31" ts_lastsave="1556178437.78" unique_id="1">
		<rich_text>_________________________________
Roboter initialisieren: drücken und halten; nochmal wechselt die Richtung
Türe schließen immer!
ALT+SHIFT+F für Einrückung

</rich_text>
		<rich_text foreground="#ffff00000000" scale="h3">Stundenzettel eintragen
Git Push
Roboter aus machen</rich_text>
		<rich_text>
_________________________________


//1) Sensor auslesen per Socket in Java
	//1. Java Socket Client
		//-Daten holen einfach und ausgeben auf Konsole
	//2. An Hardware testen -&gt; MIR Netzwerkschlüssel: mirex4you
		//-IP Adresse passt?
	//3. Empfangene Daten nutzbar machen
		//-Tokenisieren
		//-Zu Doubles konvertierenzur richtigen Zeit holen und festhalten
		//-Fehler bereinigen mit zu viele Werte da
		//-Zeitstempel 
		//-aus der Schleife heraus holen mit Callback
		//-Receive Methode verbessern (In Methoden auslagern wo der Name passt)
	//4. Verbessern
		//-Verbindung schließen
2) Plotten
	//1. XChart API anschauen
		//-Wie Library in Netbeans importieren? -&gt; sonst: Umstieg auf maven?
	Daten sammeln und übergeben
	Daten in Echtzeit aktualisieren
3) hinter ROS API verbergen (Messages)
4) Asynchrone Kommunikation einbauen. Receive von SensorDataReceiver sollte in einem seperaten Thread landen

</rich_text>
	</node>
</cherrytree>
